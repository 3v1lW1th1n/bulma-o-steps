// shim for converting to a css file
@import ./styles/utilities/_all.sass

$steps-default-color: $grey-lighter !default
$steps-completed-color: $success !default
$steps-active-color: $success !default
$steps-horizontal-min-width: 10em !default
$steps-vertical-min-height: 4em !default
$steps-marker-size: 2 !default
$steps-divider-size: 0.4em !default
$steps-gap-size: 0.3rem !default
$steps-hollow-border-size: 0.3em !default
$steps-thin-divider-size: 1px !default
$steps-thin-marker-size: 0.8em !default

/*
 *
 *                          iiii                        iiii
 *                         i::::i                      i::::i
 *                          iiii                        iiii
 *   mmmmmmm    mmmmmmm   iiiiiii xxxxxxx      xxxxxxxiiiiiiinnnn  nnnnnnnn        ssssssssss
 * mm:::::::m  m:::::::mm i:::::i  x:::::x    x:::::x i:::::in:::nn::::::::nn    ss::::::::::s
 *m::::::::::mm::::::::::m i::::i   x:::::x  x:::::x   i::::in::::::::::::::nn ss:::::::::::::s
 *m::::::::::::::::::::::m i::::i    x:::::xx:::::x    i::::inn:::::::::::::::ns::::::ssss:::::s
 *m:::::mmm::::::mmm:::::m i::::i     x::::::::::x     i::::i  n:::::nnnn:::::n s:::::s  ssssss
 *m::::m   m::::m   m::::m i::::i      x::::::::x      i::::i  n::::n    n::::n   s::::::s
 *m::::m   m::::m   m::::m i::::i      x::::::::x      i::::i  n::::n    n::::n      s::::::s
 *m::::m   m::::m   m::::m i::::i     x::::::::::x     i::::i  n::::n    n::::nssssss   s:::::s
 *m::::m   m::::m   m::::mi::::::i   x:::::xx:::::x   i::::::i n::::n    n::::ns:::::ssss::::::s
 *m::::m   m::::m   m::::mi::::::i  x:::::x  x:::::x  i::::::i n::::n    n::::ns::::::::::::::s
 *m::::m   m::::m   m::::mi::::::i x:::::x    x:::::x i::::::i n::::n    n::::n s:::::::::::ss
 *mmmmmm   mmmmmm   mmmmmmiiiiiiiixxxxxxx      xxxxxxxiiiiiiii nnnnnn    nnnnnn  sssssssssss

=steps-horizontal
  +tablet
    &:not(.is-vertical)
      @content


  &.is-horizontal
    @content

=steps-vertical
  +mobile
    &:not(.is-horizontal)
      @content


  &.is-vertical
    @content

=steps-all-segments
  &.steps .steps-segment
    @content

=steps-active-segment
  &.steps .steps-segment.is-active
    @content

=steps-inactive-segments
  &.steps .steps-segment.is-active ~ .steps-segment
    @content

// Use a mixin to define all ratios in the same spot
=steps-size($size)
  font-size: $size

  .steps-marker
    height: $size * $steps-marker-size
    width: $size * $steps-marker-size
    overflow: hidden

  +steps-vertical
    // Draw a vertical divider
    display: flex
    flex-direction: column

    .steps-segment:not(:last-child):after
      // top and bottom position is almost touching the inner side of a hollow border marker
      bottom: -$steps-gap-size * 0.8
      left: calc(#{$size * $steps-marker-size / 2} - (#{$steps-divider-size / 2}))
      top: $size * $steps-marker-size - $steps-gap-size * 0.8
      width: $steps-divider-size

    // Align the content with the marker
    .steps-content
      margin-left: calc(#{$size * $steps-marker-size / 2} + .5em)
      margin-top: -$size * $steps-marker-size
      padding-left: 1em
      padding-bottom: 1em

    .steps-content.is-divider-content
      margin-top: 0
      padding-bottom: 0

    &.has-content-centered
      .steps-content
        padding-top: calc(#{$size * $steps-marker-size / 2} - .5em)

    &:not(.is-thin)
      &.has-gaps .steps-segment, .steps-segment.has-gaps
        &:not(:last-child):after
          top: $size * $steps-marker-size + $steps-gap-size
          bottom: $steps-gap-size


  +steps-horizontal
    // Draw a horizontal divider
    .steps-segment:not(:last-child):after
      height: $steps-divider-size

      // top and bottom position is almost touching the inner side of a hollow border marker
      left: $size * $steps-marker-size - $steps-gap-size * 0.8
      right: -$steps-gap-size * 0.8
      top: calc(#{$size * $steps-marker-size / 2} - (#{$steps-divider-size / 2}))

    &.has-content-above .steps-segment:not(:last-child)::after
      bottom: calc(#{$size * $steps-marker-size / 2} - (#{$steps-divider-size / 2}))
      top: auto

    // extra data
    .extra-data
      left: calc(50% + #{$size * $steps-marker-size / 2 + $steps-gap-size})
      right: calc(-50% + #{$size * $steps-marker-size / 2 + $steps-gap-size})
      bottom: 100%
      position: absolute

      &.has-overflow-right
        overflow: visible
        right: auto
        white-space: nowrap
        min-width: calc(100% - #{$size * $steps-marker-size / 2} - (#{$steps-divider-size / 2}))

      &.has-overflow-left
        overflow: visible
        left: auto
        white-space: nowrap
        min-width: calc(100% - #{$size * $steps-marker-size / 2} - (#{$steps-divider-size / 2}))

      &.has-overflow-centered
        overflow: visible
        left: auto
        white-space: nowrap
        min-width: calc(100% - #{$size * $steps-marker-size / 2} - (#{$steps-divider-size / 2}))

    &.has-content-above .extra-data
      top: 100%
      bottom: auto

    // Align the content with the marker
    .steps-content
      margin-left: $size * $steps-marker-size / 2

      &:not(:last-child)
        margin-right: -$size * $steps-marker-size / 2

      &.is-divider-content
        margin-right: -$size * $steps-marker-size / 2
        padding-left: 2em
        padding-right: 2em

    &.has-content-centered
      .steps-segment:not(:last-child):after
        left: 50%
        right: -50%

      .steps-marker
        position: absolute
        left: calc(50% - #{$size * $steps-marker-size / 2})

      .steps-content
        margin-top: $size * $steps-marker-size
        margin-left: 0.5em
        margin-right: 0.5em
        padding-top: 0.2em

    &.has-content-above.has-content-centered .steps-content
      margin-bottom: $size * $steps-marker-size
      padding-bottom: 0.2em

    &:not(.is-thin)
      &.has-gaps .steps-segment, .steps-segment.has-gaps
        &:not(:last-child):after
          left: $size * $steps-marker-size + $steps-gap-size
          right: $steps-gap-size

      &.has-content-centered
        &.has-gaps .steps-segment, .steps-segment.has-gaps
          &:not(:last-child):after
            left: calc(50% + #{$size * $steps-marker-size / 2 + $steps-gap-size})
            right: calc(-50% + #{$size * $steps-marker-size / 2 + $steps-gap-size})

/*
 *
 *bbbbbbbb
 *b::::::b                                                iiii
 *b::::::b                                               i::::i
 *b::::::b                                                iiii
 * b:::::b
 * b:::::bbbbbbbbb      aaaaaaaaaaaaa      ssssssssss   iiiiiii     cccccccccccccccc
 * b::::::::::::::bb    a::::::::::::a   ss::::::::::s  i:::::i   cc:::::::::::::::c
 * b::::::::::::::::b   aaaaaaaaa:::::ass:::::::::::::s  i::::i  c:::::::::::::::::c
 * b:::::bbbbb:::::::b           a::::as::::::ssss:::::s i::::i c:::::::cccccc:::::c
 * b:::::b    b::::::b    aaaaaaa:::::a s:::::s  ssssss  i::::i c::::::c     ccccccc
 * b:::::b     b:::::b  aa::::::::::::a   s::::::s       i::::i c:::::c
 * b:::::b     b:::::b a::::aaaa::::::a      s::::::s    i::::i c:::::c
 * b:::::b     b:::::ba::::a    a:::::assssss   s:::::s  i::::i c::::::c     ccccccc
 * b:::::bbbbbb::::::ba::::a    a:::::as:::::ssss::::::si::::::ic:::::::cccccc:::::c
 * b::::::::::::::::b a:::::aaaa::::::as::::::::::::::s i::::::i c:::::::::::::::::c
 * b:::::::::::::::b   a::::::::::aa:::as:::::::::::ss  i::::::i  cc:::::::::::::::c
 * bbbbbbbbbbbbbbbb     aaaaaaaaaa  aaaa sssssssssss    iiiiiiii    cccccccccccccccc
/*                        tttt
 *                       ttt:::t
 *                       t:::::t
 *                       t:::::t
 *    ssssssssss   ttttttt:::::ttttttt        eeeeeeeeeeee    ppppp   ppppppppp       ssssssssss
 *  ss::::::::::s  t:::::::::::::::::t      ee::::::::::::ee  p::::ppp:::::::::p    ss::::::::::s
 *ss:::::::::::::s t:::::::::::::::::t     e::::::eeeee:::::eep:::::::::::::::::p ss:::::::::::::s
 *s::::::ssss:::::stttttt:::::::tttttt    e::::::e     e:::::epp::::::ppppp::::::ps::::::ssss:::::s
 * s:::::s  ssssss       t:::::t          e:::::::eeeee::::::e p:::::p     p:::::p s:::::s  ssssss
 *   s::::::s            t:::::t          e:::::::::::::::::e  p:::::p     p:::::p   s::::::s
 *      s::::::s         t:::::t          e::::::eeeeeeeeeee   p:::::p     p:::::p      s::::::s
 *ssssss   s:::::s       t:::::t    tttttte:::::::e            p:::::p    p::::::pssssss   s:::::s
 *s:::::ssss::::::s      t::::::tttt:::::te::::::::e           p:::::ppppp:::::::ps:::::ssss::::::s
 *s::::::::::::::s       tt::::::::::::::t e::::::::eeeeeeee   p::::::::::::::::p s::::::::::::::s
 * s:::::::::::ss          tt:::::::::::tt  ee:::::::::::::e   p::::::::::::::pp   s:::::::::::ss
 *  sssssssssss              ttttttttttt      eeeeeeeeeeeeee   p::::::pppppppp      sssssssssss
 *                                                             p:::::p
 *                                                             p:::::p
 *                                                            p:::::::p
 *                                                            p:::::::p
 *                                                            p:::::::p
 *                                                            ppppppppp

.steps
  +block

  .steps-segment
    position: relative

    &:not(:last-child):after
      // This will contain the horizontal or vertical divider
      content: " "
      display: block
      position: absolute

  +steps-vertical
    .steps-segment
      display: block

      &:not(:last-child)
        min-height: $steps-vertical-min-height

    &.is-short
      .steps-segment
        flex-grow: 0

        &:not(:last-child)
          //this is commented because text would be running perpendicular to the line, so we won't need as much room
          // min-height: $steps-horizontal-min-width

    &.is-short.is-centered
      justify-content: center

    &.is-short.is-bottom
      justify-content: flex-end

    &:not(.is-short)
      height: 100%
      display: flex
      flex-direction: column

      .steps-segment:not(:last-child)
        flex-grow: 1


  +steps-horizontal
    display: flex

    .steps-segment:not(:last-child)
      flex-basis: 1rem
      flex-grow: 1
      flex-shrink: 1

    &.is-narrow
      .steps-segment
        flex-grow: 0

        &:not(:last-child)
          min-width: $steps-horizontal-min-width

    &.is-narrow.is-centered
      justify-content: center

    &.is-narrow.is-right
      justify-content: flex-end

    &.has-content-centered
      text-align: center

    &.is-balanced, &.has-content-centered
      .steps-segment:last-child
        flex-basis: 1rem
        flex-grow: 1
        flex-shrink: 1

    &.is-narrow.has-content-centered
      .steps-segment:last-child
        flex-grow: 0
        min-width: $steps-horizontal-min-width

    .steps-content.is-divider-content
      text-align: center


  // Marker style
  .steps-marker
    align-items: center
    display: flex
    border-radius: 50%
    font-weight: $weight-bold
    justify-content: center

    // Position & z-index are needed to put it above the divider
    position: relative
    z-index: 5

.steps
  +steps-size($size-normal)

.steps.is-small
  +steps-size($size-small)

.steps.is-medium
  +steps-size($size-medium)

.steps.is-large
  +steps-size($size-large)

/*
 *
 *                                                     dddddddd
 *                                                     d::::::d  iiii     ffffffffffffffff    iiii
 *                                                     d::::::d i::::i   f::::::::::::::::f  i::::i
 *                                                     d::::::d  iiii   f::::::::::::::::::f  iiii
 *                                                     d:::::d          f::::::fffffff:::::f
 *   mmmmmmm    mmmmmmm      ooooooooooo       ddddddddd:::::d iiiiiii  f:::::f       ffffffiiiiiii     eeeeeeeeeeee    rrrrr   rrrrrrrrr       ssssssssss
 * mm:::::::m  m:::::::mm  oo:::::::::::oo   dd::::::::::::::d i:::::i  f:::::f             i:::::i   ee::::::::::::ee  r::::rrr:::::::::r    ss::::::::::s
 *m::::::::::mm::::::::::mo:::::::::::::::o d::::::::::::::::d  i::::i f:::::::ffffff        i::::i  e::::::eeeee:::::eer:::::::::::::::::r ss:::::::::::::s
 *m::::::::::::::::::::::mo:::::ooooo:::::od:::::::ddddd:::::d  i::::i f::::::::::::f        i::::i e::::::e     e:::::err::::::rrrrr::::::rs::::::ssss:::::s
 *m:::::mmm::::::mmm:::::mo::::o     o::::od::::::d    d:::::d  i::::i f::::::::::::f        i::::i e:::::::eeeee::::::e r:::::r     r:::::r s:::::s  ssssss
 *m::::m   m::::m   m::::mo::::o     o::::od:::::d     d:::::d  i::::i f:::::::ffffff        i::::i e:::::::::::::::::e  r:::::r     rrrrrrr   s::::::s
 *m::::m   m::::m   m::::mo::::o     o::::od:::::d     d:::::d  i::::i  f:::::f              i::::i e::::::eeeeeeeeeee   r:::::r                  s::::::s
 *m::::m   m::::m   m::::mo::::o     o::::od:::::d     d:::::d  i::::i  f:::::f              i::::i e:::::::e            r:::::r            ssssss   s:::::s
 *m::::m   m::::m   m::::mo:::::ooooo:::::od::::::ddddd::::::ddi::::::if:::::::f            i::::::ie::::::::e           r:::::r            s:::::ssss::::::s
 *m::::m   m::::m   m::::mo:::::::::::::::o d:::::::::::::::::di::::::if:::::::f            i::::::i e::::::::eeeeeeee   r:::::r            s::::::::::::::s
 *m::::m   m::::m   m::::m oo:::::::::::oo   d:::::::::ddd::::di::::::if:::::::f            i::::::i  ee:::::::::::::e   r:::::r             s:::::::::::ss
 *mmmmmm   mmmmmm   mmmmmm   ooooooooooo      ddddddddd   dddddiiiiiiiifffffffff            iiiiiiii    eeeeeeeeeeeeee   rrrrrrr              sssssssssss

// Divider Default Colors
.steps-segment
  &:after
    background-color: $steps-completed-color

  &.is-active
    &:after
      background-color: $steps-default-color

  &.is-active ~ .steps-segment
    &:after
      background-color: $steps-default-color

// Marker Default Colors
.steps:not(.is-hollow)
  .steps-marker:not(.is-hollow)
    background-color: $steps-completed-color
    color: findColorInvert($steps-completed-color)

  .steps-segment.is-active
    .steps-marker:not(.is-hollow)
      background-color: $steps-active-color
      color: findColorInvert($steps-active-color)

  .steps-segment.is-active
    & ~ .steps-segment .steps-marker:not(.is-hollow)
      background-color: $steps-default-color
      color: findColorInvert($steps-default-color)

// Hollow style
.steps.is-hollow .steps-marker,
.steps-marker.is-hollow
  border: $steps-hollow-border-size solid $steps-completed-color

.steps.is-hollow .is-active .steps-marker,
.steps .is-active .steps-marker.is-hollow
  border-color: $steps-active-color

.steps.is-hollow .steps-segment.is-active ~ .steps-segment .steps-marker,
.steps-segment.is-active ~ .steps-segment .steps-marker.is-hollow
  border-color: $steps-default-color

// Override marker color per step
@each $name, $pair in $colors
  $color: nth($pair, 1)
  $color-invert: nth($pair, 2)

  .steps:not(.is-hollow) .steps-marker:not(.is-hollow)
    &.is-#{$name}
      background-color: $color !important
      color: $color-invert !important

  .steps.is-hollow .steps-marker,
  .steps .steps-marker.is-hollow
    &.is-#{$name}
      border-color: $color !important

// Divider dashed style
=steps-divider-background($angle, $color, $size)
  background: repeating-linear-gradient($angle, $color, $color $size, transparent $size, transparent #{$size * 2})

.steps
  +steps-vertical
    &.is-dashed .steps-segment, .steps-segment.is-dashed
      &:after
        +steps-divider-background(0deg, $steps-completed-color, 5px)

    &.is-dashed .steps-segment.is-active,
    &.is-dashed .steps-segment.is-active ~ .steps-segment,
    .steps-segment.is-active.is-dashed,
    .steps-segment.is-active ~ .steps-segment.is-dashed
      &:after
        +steps-divider-background(0deg, $steps-default-color, 5px)


  +steps-horizontal
    &.is-dashed .steps-segment,
    .steps-segment.is-dashed
      &:after
        +steps-divider-background(90deg, $steps-completed-color, 10px)

    // the active segment and any subsequent segment get the default colot
    &.is-dashed .steps-segment.is-active,
    &.is-dashed .steps-segment.is-active ~ .steps-segment,
    .steps-segment.is-active.is-dashed,
    .steps-segment.is-active ~ .steps-segment.is-dashed
      &:after
        +steps-divider-background(90deg, $steps-default-color, 10px)

// Thin modifier
.steps.is-thin
  .steps-marker
    width: $steps-thin-marker-size
    height: $steps-thin-marker-size

  &.is-hollow .steps-marker,
  .steps-marker.is-hollow
    border-width: $steps-thin-divider-size
    height: calc(#{$steps-thin-marker-size} + #{$steps-thin-divider-size})
    width: calc(#{$steps-thin-marker-size} + #{$steps-thin-divider-size})

  +steps-vertical
    .steps-segment
      &:not(:last-child):after
        bottom: 0
        left: calc(#{$steps-thin-marker-size / 2} - #{$steps-thin-divider-size / 2})
        top: $steps-thin-marker-size
        width: $steps-thin-divider-size

    .steps-content
      margin-top: -$steps-thin-marker-size * 1.5
      margin-left: $steps-thin-marker-size

    &.has-gaps .steps-segment, .steps-segment.has-gaps
      &:not(:last-child):after
        bottom: $steps-thin-marker-size / 2
        top: $steps-thin-marker-size * 1.5

    &.has-content-centered
      .steps-content
        padding-top: $steps-thin-marker-size * 2


  +steps-horizontal
    .steps-segment
      &:not(:last-child):after
        left: $steps-thin-marker-size
        right: 0
        top: calc(#{$steps-thin-marker-size / 2} - #{$steps-thin-divider-size / 2})
        height: $steps-thin-divider-size

    &.has-content-above .steps-segment:not(:last-child)::after
      bottom: calc(#{$steps-thin-marker-size / 2} - #{$steps-thin-divider-size / 2})
      top: auto

    .steps-content
      margin-top: $steps-thin-marker-size

    &.has-content-centered
      .steps-segment
        &:not(:last-child):after
          left: calc(50% + #{$steps-thin-marker-size / 2})
          right: calc(-50% + #{$steps-thin-marker-size / 2})

      .steps-marker
        position: absolute
        left: calc(50% - #{$steps-thin-marker-size / 2})

    &.has-gaps .steps-segment, .steps-segment.has-gaps
      &:not(:last-child):after
        left: $steps-thin-marker-size * 1.5
        right: $steps-thin-marker-size / 2

    &.has-content-centered.has-gaps .steps-segment, &.has-content-centered .steps-segment.has-gaps
      &:not(:last-child):after
        left: calc(50% + #{$steps-thin-marker-size / 2 + $steps-thin-marker-size / 2})
        right: calc(-50% + #{$steps-thin-marker-size / 2 + $steps-thin-marker-size / 2})

//.has-content-above
.steps:not(.is-vertical).has-content-above
  .steps-segment
    display: flex
    flex-direction: column-reverse

    .steps-content
      margin-top: 0
      padding-top: 0
      display: flex
      flex-direction: column-reverse

//.has-hover-card

.steps:not(.is-vertical)
  &.has-content-centered
    .card
      .card-header
        justify-content: center

  &.has-hover-card, .has-hover-card
    .card
      .card-header

    .steps-content
      // position: absolute;

    // .show-on-hover {
    //     display: none;
    //
    // }
    //
    // .steps-segment:hover {
    //     .show-on-hover {
    //         display: initial;
    //     }
    // }

//
